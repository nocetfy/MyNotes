export const data = JSON.parse("{\"key\":\"v-3c88ad2b\",\"path\":\"/leetcode/hash/hash.html\",\"title\":\"哈希\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"哈希 [TOC] 哈希表 首先什么是 哈希表，哈希表（英文名字为 Hash table，国内也有一些算法书籍翻译为散列表，大家看到这两个名称知道都是指 hash table 就可以了）。 哈希表是根据关键码的值而直接进行访问的数据结构。 这么这官方的解释可能有点懵，其实直白来讲其实数组就是一张哈希表。 哈希表中关键码就是数组的索引下表，然后通过下表直接访问数组中的元素，如下图所示： 哈希表1\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://newzone.top/leetcode/hash/hash.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"nocetfy\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"哈希\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"哈希 [TOC] 哈希表 首先什么是 哈希表，哈希表（英文名字为 Hash table，国内也有一些算法书籍翻译为散列表，大家看到这两个名称知道都是指 hash table 就可以了）。 哈希表是根据关键码的值而直接进行访问的数据结构。 这么这官方的解释可能有点懵，其实直白来讲其实数组就是一张哈希表。 哈希表中关键码就是数组的索引下表，然后通过下表直接访问数组中的元素，如下图所示： 哈希表1\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"哈希\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"哈希表\",\"slug\":\"哈希表\",\"link\":\"#哈希表\",\"children\":[{\"level\":3,\"title\":\"哈希函数\",\"slug\":\"哈希函数\",\"link\":\"#哈希函数\",\"children\":[]},{\"level\":3,\"title\":\"哈希碰撞\",\"slug\":\"哈希碰撞\",\"link\":\"#哈希碰撞\",\"children\":[]},{\"level\":3,\"title\":\"常见的三种哈希结构\",\"slug\":\"常见的三种哈希结构\",\"link\":\"#常见的三种哈希结构\",\"children\":[]},{\"level\":3,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}]},{\"level\":2,\"title\":\"数组\",\"slug\":\"数组\",\"link\":\"#数组\",\"children\":[]},{\"level\":2,\"title\":\"Set\",\"slug\":\"set\",\"link\":\"#set\",\"children\":[]},{\"level\":2,\"title\":\"Map\",\"slug\":\"map\",\"link\":\"#map\",\"children\":[{\"level\":3,\"title\":\"合并区间\",\"slug\":\"合并区间\",\"link\":\"#合并区间\",\"children\":[]}]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":20.82,\"words\":6245},\"filePathRelative\":\"leetcode/hash/hash.md\",\"excerpt\":\"<h1> 哈希</h1>\\n<p>[TOC]</p>\\n<h2> 哈希表</h2>\\n<p>首先什么是 哈希表，哈希表（英文名字为 Hash table，国内也有一些算法书籍翻译为散列表，大家看到这两个名称知道都是指 hash table 就可以了）。</p>\\n<blockquote>\\n<p>哈希表是根据关键码的值而直接进行访问的数据结构。</p>\\n</blockquote>\\n<p>这么这官方的解释可能有点懵，其实直白来讲其实数组就是一张哈希表。</p>\\n<p>哈希表中关键码就是数组的索引下表，然后通过下表直接访问数组中的元素，如下图所示：</p>\\n<figure><img src=\\\"https://i.loli.net/2021/11/25/1kHucrljwvpf7Z3.png\\\" alt=\\\"哈希表1\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption>哈希表1</figcaption></figure>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
