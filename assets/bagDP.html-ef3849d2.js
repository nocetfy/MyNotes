const e=JSON.parse('{"key":"v-72db17a7","path":"/leetcode/dp/bagDP.html","title":"背包dp","lang":"zh-CN","frontmatter":{"description":"背包dp [toc] 01 背包 有n件物品和一个最多能被重量为capacity的背包。第i件物品的重量是w[i]，得到的价值是v[i]。每件物品只能用一次，求解将哪些物品装入背包里物品价值总和最大。 回溯三问： 当前操作：枚举第i个物品选或不选。不选，剩余容量不变；选，剩余容量减少w[i] 子问题：在剩余容量为c时，从前i个物品中得到的最大价值和 下一个子问题：分类讨论 不选：在剩余容量为c时，从前i - 1个物品中得到的最大价值和 选：在剩余容量为c - w[i]时，从前i - 1个物品中得到的最大价值和","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/leetcode/dp/bagDP.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"背包dp"}],["meta",{"property":"og:description","content":"背包dp [toc] 01 背包 有n件物品和一个最多能被重量为capacity的背包。第i件物品的重量是w[i]，得到的价值是v[i]。每件物品只能用一次，求解将哪些物品装入背包里物品价值总和最大。 回溯三问： 当前操作：枚举第i个物品选或不选。不选，剩余容量不变；选，剩余容量减少w[i] 子问题：在剩余容量为c时，从前i个物品中得到的最大价值和 下一个子问题：分类讨论 不选：在剩余容量为c时，从前i - 1个物品中得到的最大价值和 选：在剩余容量为c - w[i]时，从前i - 1个物品中得到的最大价值和"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"背包dp\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"01 背包","slug":"_01-背包","link":"#_01-背包","children":[]},{"level":3,"title":"完全背包","slug":"完全背包","link":"#完全背包","children":[]}],"git":{},"readingTime":{"minutes":19.15,"words":5746},"filePathRelative":"leetcode/dp/bagDP.md","excerpt":"<h1> 背包dp</h1>\\n<p>[toc]</p>\\n<h3> 01 背包</h3>\\n<p>有<code>n</code>件物品和一个最多能被重量为<code>capacity</code>的背包。第<code>i</code>件物品的重量是<code>w[i]</code>，得到的价值是<code>v[i]</code>。<strong>每件物品只能用一次</strong>，求解将哪些物品装入背包里物品价值总和最大。</p>\\n<p>回溯三问：</p>\\n<ul>\\n<li>当前操作：枚举<strong>第</strong><code>i</code>个物品选或不选。不选，剩余容量不变；选，剩余容量减少<code>w[i]</code></li>\\n<li>子问题：在剩余容量为<code>c</code>时，从<strong>前</strong><code>i</code>个物品中得到的最大价值和</li>\\n<li>下一个子问题：分类讨论\\n<ul>\\n<li>不选：在剩余容量为<code>c</code>时，从<strong>前</strong><code>i - 1</code>个物品中得到的最大价值和</li>\\n<li>选：在剩余容量为<code>c - w[i]</code>时，从<strong>前</strong><code>i - 1</code>个物品中得到的最大价值和</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
