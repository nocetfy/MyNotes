const e=JSON.parse('{"key":"v-201be526","path":"/interview/Go/go%20%E5%9F%BA%E7%A1%80.html","title":"GO","lang":"zh-CN","frontmatter":{"description":"GO [toc] 语法 基础语法 加不加;都可以，建议不加 函数的{必须和函数名在同一行 变量 变量声明 声明一个变量 // 声明一个变量，默认的值是0 var a int // 声明一个变量，初始化一个值 var b int = 100 // 初始化时省去数据类型，自动推断类型 var c = 100 // 海象表达式，全句变量不可用，只能在函数体内声明 e := 100","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/interview/Go/go%20%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"GO"}],["meta",{"property":"og:description","content":"GO [toc] 语法 基础语法 加不加;都可以，建议不加 函数的{必须和函数名在同一行 变量 变量声明 声明一个变量 // 声明一个变量，默认的值是0 var a int // 声明一个变量，初始化一个值 var b int = 100 // 初始化时省去数据类型，自动推断类型 var c = 100 // 海象表达式，全句变量不可用，只能在函数体内声明 e := 100"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GO\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[{"level":3,"title":"变量","slug":"变量","link":"#变量","children":[]},{"level":3,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":3,"title":"指针","slug":"指针","link":"#指针","children":[]},{"level":3,"title":"defer","slug":"defer","link":"#defer","children":[]},{"level":3,"title":"切片slice","slug":"切片slice","link":"#切片slice","children":[]},{"level":3,"title":"Map","slug":"map","link":"#map","children":[]},{"level":3,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[]},{"level":3,"title":"反射","slug":"反射","link":"#反射","children":[]},{"level":3,"title":"结构体标签","slug":"结构体标签","link":"#结构体标签","children":[]}]}],"git":{},"readingTime":{"minutes":6.38,"words":1913},"filePathRelative":"interview/Go/go 基础.md","excerpt":"<h1> GO</h1>\\n<p>[toc]</p>\\n<h2> 语法</h2>\\n<h4> 基础语法</h4>\\n<ul>\\n<li>加不加<code>;</code>都可以，建议不加</li>\\n<li>函数的<code>{</code>必须和函数名在同一行</li>\\n</ul>\\n<h3> 变量</h3>\\n<h4> 变量声明</h4>\\n<p>声明一个变量</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// 声明一个变量，默认的值是0</span>\\n<span class=\\"token keyword\\">var</span> a <span class=\\"token builtin\\">int</span>\\n<span class=\\"token comment\\">// 声明一个变量，初始化一个值</span>\\n<span class=\\"token keyword\\">var</span> b <span class=\\"token builtin\\">int</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">100</span>\\n<span class=\\"token comment\\">// 初始化时省去数据类型，自动推断类型</span>\\n<span class=\\"token keyword\\">var</span> c <span class=\\"token operator\\">=</span> <span class=\\"token number\\">100</span>\\n<span class=\\"token comment\\">// 海象表达式，全句变量不可用，只能在函数体内声明</span>\\ne <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">100</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
