const s=JSON.parse('{"key":"v-3da06a91","path":"/interview/Java/Java.html","title":"Java 基础","lang":"zh-CN","frontmatter":{"description":"Java 基础 [toc] 浮点数 浮点数是计算机对实数的近似值数值表现法。IEEE 754 是现今最广泛使用的二进制浮点数运算标准。它定义了表示浮点数的格式、反常值、特殊数值、以及这些数值的“浮点数运算符”。IEEE 754 标准指定的浮点数格式建立于二进制科学计数法的基础之上，其数值表示式为： Value=(−1)s2e(1+m)","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/interview/Java/Java.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"Java 基础"}],["meta",{"property":"og:description","content":"Java 基础 [toc] 浮点数 浮点数是计算机对实数的近似值数值表现法。IEEE 754 是现今最广泛使用的二进制浮点数运算标准。它定义了表示浮点数的格式、反常值、特殊数值、以及这些数值的“浮点数运算符”。IEEE 754 标准指定的浮点数格式建立于二进制科学计数法的基础之上，其数值表示式为： Value=(−1)s2e(1+m)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"浮点数","slug":"浮点数","link":"#浮点数","children":[]},{"level":2,"title":"集合","slug":"集合","link":"#集合","children":[{"level":3,"title":"Fail-Fast 机制","slug":"fail-fast-机制","link":"#fail-fast-机制","children":[]},{"level":3,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[]}]},{"level":2,"title":"反射、动态代理、agent","slug":"反射、动态代理、agent","link":"#反射、动态代理、agent","children":[{"level":3,"title":"反射","slug":"反射","link":"#反射","children":[]},{"level":3,"title":"javaagent","slug":"javaagent","link":"#javaagent","children":[]},{"level":3,"title":"动态代理","slug":"动态代理","link":"#动态代理","children":[]}]},{"level":2,"title":"问题排查","slug":"问题排查","link":"#问题排查","children":[{"level":3,"title":"cpu100%排查思路","slug":"cpu100-排查思路","link":"#cpu100-排查思路","children":[]},{"level":3,"title":"OOM 与 FullGC 排查","slug":"oom-与-fullgc-排查","link":"#oom-与-fullgc-排查","children":[]},{"level":3,"title":"死锁排查","slug":"死锁排查","link":"#死锁排查","children":[]},{"level":3,"title":"堆外内存泄漏排查","slug":"堆外内存泄漏排查","link":"#堆外内存泄漏排查","children":[]}]}],"git":{},"readingTime":{"minutes":40.95,"words":12284},"filePathRelative":"interview/Java/Java.md","excerpt":"<h1> Java 基础</h1>\\n<p>[toc]</p>\\n<h2> 浮点数</h2>\\n<p>浮点数是计算机对实数的近似值数值表现法。IEEE 754 是现今最广泛使用的二进制浮点数运算标准。它定义了表示浮点数的格式、反常值、特殊数值、以及这些数值的“浮点数运算符”。IEEE 754 标准指定的浮点数格式建立于二进制科学计数法的基础之上，其数值表示式为：</p>\\n<p><span class=\\"katex\\"><span class=\\"katex-mathml\\"></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6944em;\\"></span><span class=\\"mord mathnormal\\">Va</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.01968em;\\">l</span><span class=\\"mord mathnormal\\">u</span><span class=\\"mord mathnormal\\">e</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mopen\\">(</span><span class=\\"mord\\">−</span><span class=\\"mord\\">1</span><span class=\\"mclose\\"><span class=\\"mclose\\">)</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.6644em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\">s</span></span></span></span></span></span></span></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.6644em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\">e</span></span></span></span></span></span></span></span><span class=\\"mopen\\">(</span><span class=\\"mord\\">1</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span><span class=\\"mbin\\">+</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\">m</span><span class=\\"mclose\\">)</span></span></span></span></p>","autoDesc":true}');export{s as data};
