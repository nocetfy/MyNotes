const l=JSON.parse('{"key":"v-26a1e2de","path":"/interview/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84.html","title":"架构","lang":"zh-CN","frontmatter":{"description":"架构 [toc] 缓存 缓存的优势主要有以下几点： 提升访问性能 降低网络拥堵 减轻服务负载 增强可扩展性 缺点包括： 首先，服务系统中引入缓存，会增加系统的复杂度。 其次，由于缓存相比原始 DB 存储的成本更高，所以系统部署及运行的费用也会更高。 最后，由于一份数据同时存在缓存和 DB 中，甚至缓存内部也会有多个数据副本，多份数据就会存在一致性问题，同时缓存体系本身也会存在可用性问题和分区的问题。这就需要我们加强对缓存原理、缓存组件以及优秀缓存体系实践的理解，从系统架构之初就对缓存进行良好设计，降低缓存引入的副作用，让缓存体系成为服务系统高效稳定运行的强力基石。","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/interview/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"架构"}],["meta",{"property":"og:description","content":"架构 [toc] 缓存 缓存的优势主要有以下几点： 提升访问性能 降低网络拥堵 减轻服务负载 增强可扩展性 缺点包括： 首先，服务系统中引入缓存，会增加系统的复杂度。 其次，由于缓存相比原始 DB 存储的成本更高，所以系统部署及运行的费用也会更高。 最后，由于一份数据同时存在缓存和 DB 中，甚至缓存内部也会有多个数据副本，多份数据就会存在一致性问题，同时缓存体系本身也会存在可用性问题和分区的问题。这就需要我们加强对缓存原理、缓存组件以及优秀缓存体系实践的理解，从系统架构之初就对缓存进行良好设计，降低缓存引入的副作用，让缓存体系成为服务系统高效稳定运行的强力基石。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"缓存","slug":"缓存","link":"#缓存","children":[]},{"level":2,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[{"level":3,"title":"硬件负载均衡","slug":"硬件负载均衡","link":"#硬件负载均衡","children":[]},{"level":3,"title":"软件负载均衡","slug":"软件负载均衡","link":"#软件负载均衡","children":[]},{"level":3,"title":"算法","slug":"算法","link":"#算法","children":[]},{"level":3,"title":"最小活跃数","slug":"最小活跃数","link":"#最小活跃数","children":[]},{"level":3,"title":"最小活跃数","slug":"最小活跃数-1","link":"#最小活跃数-1","children":[]},{"level":3,"title":"哈希","slug":"哈希","link":"#哈希","children":[]},{"level":3,"title":"一致性哈希","slug":"一致性哈希","link":"#一致性哈希","children":[]}]},{"level":2,"title":"限流","slug":"限流","link":"#限流","children":[{"level":3,"title":"计数器算法","slug":"计数器算法","link":"#计数器算法","children":[]},{"level":3,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]},{"level":3,"title":"漏桶法","slug":"漏桶法","link":"#漏桶法","children":[]},{"level":3,"title":"令牌桶法","slug":"令牌桶法","link":"#令牌桶法","children":[]}]},{"level":2,"title":"请求合并","slug":"请求合并","link":"#请求合并","children":[]},{"level":2,"title":"降级、熔断","slug":"降级、熔断","link":"#降级、熔断","children":[{"level":3,"title":"熔断","slug":"熔断","link":"#熔断","children":[]},{"level":3,"title":"降级","slug":"降级","link":"#降级","children":[]}]},{"level":2,"title":"灾备与故障转移","slug":"灾备与故障转移","link":"#灾备与故障转移","children":[{"level":3,"title":"异地多活","slug":"异地多活","link":"#异地多活","children":[]}]}],"git":{},"readingTime":{"minutes":24.47,"words":7341},"filePathRelative":"interview/架构/架构.md","excerpt":"<h1> 架构</h1>\\n<p>[toc]</p>\\n<h2> 缓存</h2>\\n<p>缓存的优势主要有以下几点：</p>\\n<ul>\\n<li>提升访问性能</li>\\n<li>降低网络拥堵</li>\\n<li>减轻服务负载</li>\\n<li>增强可扩展性</li>\\n</ul>\\n<p>缺点包括：</p>\\n<ul>\\n<li>首先，服务系统中引入缓存，会增加系统的复杂度。</li>\\n<li>其次，由于缓存相比原始 DB 存储的成本更高，所以系统部署及运行的费用也会更高。</li>\\n<li>最后，由于一份数据同时存在缓存和 DB 中，甚至缓存内部也会有多个数据副本，多份数据就会存在一致性问题，同时缓存体系本身也会存在可用性问题和分区的问题。这就需要我们加强对缓存原理、缓存组件以及优秀缓存体系实践的理解，从系统架构之初就对缓存进行良好设计，降低缓存引入的副作用，让缓存体系成为服务系统高效稳定运行的强力基石。</li>\\n</ul>","autoDesc":true}');export{l as data};
