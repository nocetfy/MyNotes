import{_ as n,X as a,Y as s,$ as e}from"./framework-1ee2252c.js";const o={},t=e(`<h1 id="leetcode" tabindex="-1"><a class="header-anchor" href="#leetcode" aria-hidden="true">#</a> leetcode</h1><blockquote><ol><li><p>常见关键词到思路</p><ul><li>构建题目树到答案树、枝到枝、叶到叶的对应关系</li></ul></li><li><p>常见题目到最优解</p></li><li><p>解法到题目的举一反三</p></li></ol></blockquote><blockquote><p>关键字: array int sum</p><p>形状类关键词，分合</p><p>抽象思考array的性质</p><p>递归 base case 最小的分法</p><p>递归 分治 遍历 本质是形状不同的分法，而且可以互相转化</p><p>划分：常数，如2，3，26[string]。根号。array.length</p><p>聚合：极值，双指针</p><p>从特殊到一般，从最简单的情况进行推导，推广到一般情况</p><p>事出反常必有妖 题目给一个奇怪的条件，则从这个条件为突破口进行联想</p><p>计数问题通常可以转化为求和问题</p><p>前缀和的存在性问题可以使用哈希表辅助</p></blockquote><blockquote><ul><li>注意溢出，int long</li><li>注意负数最小值比正数最大值大1</li><li>注意字符串数字题目去除前导0</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意边界情况，bad case，如<code>0</code>,<code>null</code>,<code>“”</code>，越界，空指针等</li><li>注意需要求模的题目，记得<code>% 1e9 + 7</code></li><li><code>Java</code>的<code>split</code>会移除首尾的<code>empty value</code>，不想移除可以用<code>ip.split(&quot;:&quot;, -1);</code></li><li>矩阵类型题目，可以考虑对称性，轴对称、中心对称</li></ul></blockquote>`,4),p=[t];function c(l,i){return a(),s("div",null,p)}const d=n(o,[["render",c],["__file","index.html.vue"]]);export{d as default};
