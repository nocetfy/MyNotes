const e=JSON.parse('{"key":"v-31987621","path":"/leetcode/","title":"leetcode","lang":"zh-CN","frontmatter":{"description":"leetcode 常见关键词到思路 构建题目树到答案树、枝到枝、叶到叶的对应关系 常见题目到最优解 解法到题目的举一反三 关键字: array int sum 形状类关键词，分合 抽象思考array的性质 递归 base case 最小的分法 递归 分治 遍历 本质是形状不同的分法，而且可以互相转化 划分：常数，如2，3，26[string]。根号。array.length 聚合：极值，双指针 从特殊到一般，从最简单的情况进行推导，推广到一般情况 事出反常必有妖 题目给一个奇怪的条件，则从这个条件为突破口进行联想 计数问题通常可以转化为求和问题 前缀和的存在性问题可以使用哈希表辅助","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/leetcode/"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"leetcode"}],["meta",{"property":"og:description","content":"leetcode 常见关键词到思路 构建题目树到答案树、枝到枝、叶到叶的对应关系 常见题目到最优解 解法到题目的举一反三 关键字: array int sum 形状类关键词，分合 抽象思考array的性质 递归 base case 最小的分法 递归 分治 遍历 本质是形状不同的分法，而且可以互相转化 划分：常数，如2，3，26[string]。根号。array.length 聚合：极值，双指针 从特殊到一般，从最简单的情况进行推导，推广到一般情况 事出反常必有妖 题目给一个奇怪的条件，则从这个条件为突破口进行联想 计数问题通常可以转化为求和问题 前缀和的存在性问题可以使用哈希表辅助"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"leetcode\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.1,"words":331},"filePathRelative":"leetcode/README.md","excerpt":"<h1> leetcode</h1>\\n<blockquote>\\n<ol>\\n<li>\\n<p>常见关键词到思路</p>\\n<ul>\\n<li>构建题目树到答案树、枝到枝、叶到叶的对应关系</li>\\n</ul>\\n</li>\\n<li>\\n<p>常见题目到最优解</p>\\n</li>\\n<li>\\n<p>解法到题目的举一反三</p>\\n</li>\\n</ol>\\n</blockquote>\\n<blockquote>\\n<p>关键字: array int sum</p>\\n<p>形状类关键词，分合</p>\\n<p>抽象思考array的性质</p>\\n<p>递归 base case 最小的分法</p>\\n<p>递归 分治 遍历 本质是形状不同的分法，而且可以互相转化</p>\\n<p>划分：常数，如2，3，26[string]。根号。array.length</p>\\n<p>聚合：极值，双指针</p>\\n<p>从特殊到一般，从最简单的情况进行推导，推广到一般情况</p>\\n<p>事出反常必有妖 题目给一个奇怪的条件，则从这个条件为突破口进行联想</p>\\n<p>计数问题通常可以转化为求和问题</p>\\n<p>前缀和的存在性问题可以使用哈希表辅助</p>\\n</blockquote>","autoDesc":true}');export{e as data};
