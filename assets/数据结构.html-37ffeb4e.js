const e=JSON.parse('{"key":"v-297f72f0","path":"/interview/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","title":"数据结构","lang":"zh-CN","frontmatter":{"description":"数据结构 [toc] 红黑树 TreeMap底层通过红黑树(Red-Black tree)实现，也就意味着containsKey(), get(), put(), remove()都有着log(n)的时间复杂度。其具体算法实现参照了《算法导论》。 TreeMap_base.png","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/interview/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"数据结构"}],["meta",{"property":"og:description","content":"数据结构 [toc] 红黑树 TreeMap底层通过红黑树(Red-Black tree)实现，也就意味着containsKey(), get(), put(), remove()都有着log(n)的时间复杂度。其具体算法实现参照了《算法导论》。 TreeMap_base.png"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"红黑树","slug":"红黑树","link":"#红黑树","children":[{"level":3,"title":"预备知识","slug":"预备知识","link":"#预备知识","children":[]},{"level":3,"title":"方法剖析","slug":"方法剖析","link":"#方法剖析","children":[]}]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[{"level":3,"title":"方法剖析","slug":"方法剖析-1","link":"#方法剖析-1","children":[]}]},{"level":2,"title":"B树与B+树","slug":"b树与b-树","link":"#b树与b-树","children":[{"level":3,"title":"B树","slug":"b树","link":"#b树","children":[]},{"level":3,"title":"B+树","slug":"b-树","link":"#b-树","children":[]}]},{"level":2,"title":"跳表","slug":"跳表","link":"#跳表","children":[]},{"level":2,"title":"BitMap & BloomFilter","slug":"bitmap-bloomfilter","link":"#bitmap-bloomfilter","children":[]},{"level":2,"title":"外排序","slug":"外排序","link":"#外排序","children":[{"level":3,"title":"位图排序法","slug":"位图排序法","link":"#位图排序法","children":[]},{"level":3,"title":"多路归并排序","slug":"多路归并排序","link":"#多路归并排序","children":[]},{"level":3,"title":"题目","slug":"题目","link":"#题目","children":[]}]}],"git":{},"readingTime":{"minutes":33.07,"words":9920},"filePathRelative":"interview/数据结构与算法/数据结构.md","excerpt":"<h1> 数据结构</h1>\\n<p>[toc]</p>\\n<h2> 红黑树</h2>\\n<p><strong>TreeMap底层通过红黑树(Red-Black tree)实现</strong>，也就意味着<code>containsKey()</code>, <code>get()</code>, <code>put()</code>, <code>remove()</code>都有着<code>log(n)</code>的时间复杂度。其具体算法实现参照了《算法导论》。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/nocetfy/image/main/img/TreeMap_base.png\\" alt=\\"TreeMap_base.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>TreeMap_base.png</figcaption></figure>","autoDesc":true}');export{e as data};
