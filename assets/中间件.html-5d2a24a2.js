const e=JSON.parse('{"key":"v-db9bf510","path":"/interview/%E5%88%86%E5%B8%83%E5%BC%8F/%E4%B8%AD%E9%97%B4%E4%BB%B6.html","title":"中间件","lang":"zh-CN","frontmatter":{"description":"中间件 [toc] zookeeper 概述 ZooKeeper 基础知识基本分为三大模块： 数据模型 ACL 权限控制 Watch 监控 其中，数据模型是最重要的，很多 ZooKeeper 中典型的应用场景都是利用这些基础模块实现的。比如我们可以利用数据模型中的临时节点和 Watch 监控机制来实现一个发布订阅的功能。 ZooKeeper 中的数据模型是一种树形结构，非常像电脑中的文件系统，有一个根文件夹，下面还有很多子文件夹。ZooKeeper 的数据模型也具有一个固定的根节点（/），我们可以在根节点下创建子节点，并在子节点下继续创建下一级节点。ZooKeeper 树中的每一层级用斜杠（/）分隔开，且只能用绝对路径（如“get /work/task1”）的方式查询 ZooKeeper 节点，而不能使用相对路径。","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/interview/%E5%88%86%E5%B8%83%E5%BC%8F/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"中间件"}],["meta",{"property":"og:description","content":"中间件 [toc] zookeeper 概述 ZooKeeper 基础知识基本分为三大模块： 数据模型 ACL 权限控制 Watch 监控 其中，数据模型是最重要的，很多 ZooKeeper 中典型的应用场景都是利用这些基础模块实现的。比如我们可以利用数据模型中的临时节点和 Watch 监控机制来实现一个发布订阅的功能。 ZooKeeper 中的数据模型是一种树形结构，非常像电脑中的文件系统，有一个根文件夹，下面还有很多子文件夹。ZooKeeper 的数据模型也具有一个固定的根节点（/），我们可以在根节点下创建子节点，并在子节点下继续创建下一级节点。ZooKeeper 树中的每一层级用斜杠（/）分隔开，且只能用绝对路径（如“get /work/task1”）的方式查询 ZooKeeper 节点，而不能使用相对路径。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"中间件\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"zookeeper","slug":"zookeeper","link":"#zookeeper","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"发布订阅模式","slug":"发布订阅模式","link":"#发布订阅模式","children":[]},{"level":3,"title":"选举","slug":"选举","link":"#选举","children":[]},{"level":3,"title":"Eureka和zookeeper的区别","slug":"eureka和zookeeper的区别","link":"#eureka和zookeeper的区别","children":[]}]},{"level":2,"title":"ElasticSearch","slug":"elasticsearch","link":"#elasticsearch","children":[{"level":3,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":3,"title":"搜索引擎原理","slug":"搜索引擎原理","link":"#搜索引擎原理","children":[]},{"level":3,"title":"倒排索引","slug":"倒排索引","link":"#倒排索引","children":[]},{"level":3,"title":"深度翻页","slug":"深度翻页","link":"#深度翻页","children":[]}]},{"level":2,"title":"Apollo","slug":"apollo","link":"#apollo","children":[{"level":3,"title":"好处","slug":"好处","link":"#好处","children":[]},{"level":3,"title":"架构","slug":"架构","link":"#架构","children":[]},{"level":3,"title":"Apollo客户端的实现原理","slug":"apollo客户端的实现原理","link":"#apollo客户端的实现原理","children":[]},{"level":3,"title":"配置更新推送原理","slug":"配置更新推送原理","link":"#配置更新推送原理","children":[]}]}],"git":{},"readingTime":{"minutes":20.63,"words":6190},"filePathRelative":"interview/分布式/中间件.md","excerpt":"<h1> 中间件</h1>\\n<p>[toc]</p>\\n<h2> zookeeper</h2>\\n<h3> 概述</h3>\\n<p>ZooKeeper 基础知识基本分为三大模块：</p>\\n<ul>\\n<li>数据模型</li>\\n<li>ACL 权限控制</li>\\n<li>Watch 监控</li>\\n</ul>\\n<p>其中，数据模型是最重要的，很多 ZooKeeper 中典型的应用场景都是利用这些基础模块实现的。比如我们可以利用数据模型中的临时节点和 Watch 监控机制来实现一个发布订阅的功能。</p>\\n<p>ZooKeeper 中的数据模型是一种树形结构，非常像电脑中的文件系统，有一个根文件夹，下面还有很多子文件夹。ZooKeeper 的数据模型也具有一个固定的根节点（/），我们可以在根节点下创建子节点，并在子节点下继续创建下一级节点。ZooKeeper 树中的每一层级用斜杠（/）分隔开，且只能用绝对路径（如“get /work/task1”）的方式查询 ZooKeeper 节点，而不能使用相对路径。</p>","autoDesc":true}');export{e as data};
