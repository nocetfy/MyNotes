const e=JSON.parse('{"key":"v-c8c97942","path":"/interview/%E6%A1%86%E6%9E%B6/Spring%20AOP.html","title":"AOP","lang":"zh-CN","frontmatter":{"description":"AOP [toc] 概述 ​\\tAOP（Aspect-OrientedProgramming，面向方面编程），可以说是OOP（Object-Oriented Programing，面向对象编程）的补充和完善。实现AOP的技术，主要分为两大类：一是采用动态代理技术（典型代表为Spring AOP），利用截取消息的方式（典型代表为AspectJ-AOP），对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/interview/%E6%A1%86%E6%9E%B6/Spring%20AOP.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"AOP"}],["meta",{"property":"og:description","content":"AOP [toc] 概述 ​\\tAOP（Aspect-OrientedProgramming，面向方面编程），可以说是OOP（Object-Oriented Programing，面向对象编程）的补充和完善。实现AOP的技术，主要分为两大类：一是采用动态代理技术（典型代表为Spring AOP），利用截取消息的方式（典型代表为AspectJ-AOP），对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AOP\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"AOP实现使用","slug":"aop实现使用","link":"#aop实现使用","children":[]},{"level":3,"title":"AOP原理","slug":"aop原理","link":"#aop原理","children":[]},{"level":3,"title":"异步","slug":"异步","link":"#异步","children":[]},{"level":3,"title":"事务","slug":"事务","link":"#事务","children":[]},{"level":3,"title":"循环依赖与AOP","slug":"循环依赖与aop","link":"#循环依赖与aop","children":[]}],"git":{},"readingTime":{"minutes":3.09,"words":928},"filePathRelative":"interview/框架/Spring AOP.md","excerpt":"<h1> AOP</h1>\\n<p>[toc]</p>\\n<h3> 概述</h3>\\n<p>​\\tAOP（Aspect-OrientedProgramming，面向方面编程），可以说是OOP（Object-Oriented Programing，面向对象编程）的补充和完善。实现AOP的技术，主要分为两大类：一是采用动态代理技术（<strong>典型代表为Spring AOP</strong>），利用截取消息的方式（<strong>典型代表为AspectJ-AOP</strong>），对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。</p>","autoDesc":true}');export{e as data};
