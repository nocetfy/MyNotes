const n=JSON.parse('{"key":"v-1db76dce","path":"/leetcode/keng/%E5%9D%91%E7%82%B9%E6%80%BB%E7%BB%93.html","title":"坑点总结","lang":"zh-CN","frontmatter":{"description":"坑点总结 通用 双指针 相向双指针 移动过程中需要不断核实left与right的关系 使用等号判断，是因为边界时使用等号可以省去额外判断 \\tint left = 0, right = nums.length - 1; while (left &lt;= right) { \\t// 指针在移动，条件可能会被破坏，需要不停核实 while (left &lt;= right &amp;&amp; nums[left] &lt; k) { left++; } while (left &lt;= right &amp;&amp; nums[right] &gt;= k) { right--; } \\t// 不一定满足，因为可能是因为上面超过了边界导致的退出 if (left &lt;= right) { int temp = nums[left]; nums[left++] = nums[right]; nums[right--] = temp; } }","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/leetcode/keng/%E5%9D%91%E7%82%B9%E6%80%BB%E7%BB%93.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"坑点总结"}],["meta",{"property":"og:description","content":"坑点总结 通用 双指针 相向双指针 移动过程中需要不断核实left与right的关系 使用等号判断，是因为边界时使用等号可以省去额外判断 \\tint left = 0, right = nums.length - 1; while (left &lt;= right) { \\t// 指针在移动，条件可能会被破坏，需要不停核实 while (left &lt;= right &amp;&amp; nums[left] &lt; k) { left++; } while (left &lt;= right &amp;&amp; nums[right] &gt;= k) { right--; } \\t// 不一定满足，因为可能是因为上面超过了边界导致的退出 if (left &lt;= right) { int temp = nums[left]; nums[left++] = nums[right]; nums[right--] = temp; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"坑点总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"通用","slug":"通用","link":"#通用","children":[]},{"level":2,"title":"双指针","slug":"双指针","link":"#双指针","children":[{"level":3,"title":"相向双指针","slug":"相向双指针","link":"#相向双指针","children":[]},{"level":3,"title":"同向双指针","slug":"同向双指针","link":"#同向双指针","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"leetcode/keng/坑点总结.md","excerpt":"<h1> 坑点总结</h1>\\n<h2> 通用</h2>\\n<h2> 双指针</h2>\\n<h3> 相向双指针</h3>\\n<ol>\\n<li>移动过程中需要不断核实<code>left</code>与<code>right</code>的关系</li>\\n<li>使用等号判断，是因为边界时使用等号可以省去额外判断</li>\\n</ol>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code>\\t<span class=\\"token keyword\\">int</span> left <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> right <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>left <span class=\\"token operator\\">&lt;=</span> right<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    \\t<span class=\\"token comment\\">// 指针在移动，条件可能会被破坏，需要不停核实</span>\\n      <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>left <span class=\\"token operator\\">&lt;=</span> right <span class=\\"token operator\\">&amp;&amp;</span> nums<span class=\\"token punctuation\\">[</span>left<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          left<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>left <span class=\\"token operator\\">&lt;=</span> right <span class=\\"token operator\\">&amp;&amp;</span> nums<span class=\\"token punctuation\\">[</span>right<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;=</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          right<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    \\t<span class=\\"token comment\\">// 不一定满足，因为可能是因为上面超过了边界导致的退出</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>left <span class=\\"token operator\\">&lt;=</span> right<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">int</span> temp <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">[</span>left<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n          nums<span class=\\"token punctuation\\">[</span>left<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">[</span>right<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n          nums<span class=\\"token punctuation\\">[</span>right<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> temp<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
