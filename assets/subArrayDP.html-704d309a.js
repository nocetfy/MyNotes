const e=JSON.parse('{"key":"v-55310a12","path":"/leetcode/dp/subArrayDP.html","title":"子数组DP","lang":"zh-CN","frontmatter":{"description":"子数组DP [toc] 思路 子数组dp就是一个套路，枚举每个右端点，然后dfs找左端点的位置。 题目 53. 最大子序和 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 示例 1：","head":[["meta",{"property":"og:url","content":"https://newzone.top/MyNotes/leetcode/dp/subArrayDP.html"}],["meta",{"property":"og:site_name","content":"nocetfy"}],["meta",{"property":"og:title","content":"子数组DP"}],["meta",{"property":"og:description","content":"子数组DP [toc] 思路 子数组dp就是一个套路，枚举每个右端点，然后dfs找左端点的位置。 题目 53. 最大子序和 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 示例 1："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"子数组DP\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"题目","slug":"题目","link":"#题目","children":[]}],"git":{},"readingTime":{"minutes":6.43,"words":1930},"filePathRelative":"leetcode/dp/subArrayDP.md","excerpt":"<h1> 子数组DP</h1>\\n<p>[toc]</p>\\n<h3> 思路</h3>\\n<p>子数组dp就是一个套路，枚举每个右端点，然后dfs找左端点的位置。</p>\\n<h3> 题目</h3>\\n<h4> <a href=\\"https://leetcode-cn.com/problems/maximum-subarray/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">53. 最大子序和</a></h4>\\n<p>给定一个整数数组 <code>nums</code> ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p>\\n<p><strong>示例 1：</strong></p>","autoDesc":true}');export{e as data};
